{
  "config": {
    "error": {
      "scan_interval_invalid": "The scan interval should be a positive number.",
      "scan_interval_while_charging_invalid": "The scan interval during charging should be a positive number.",
      "unsupported_api_version": "Unsupported Peblar API version.",
      "auth_failure": "Unable to connect to Peblar EV Charger. Check the API key from the settings page of you Peblar EV Charger.",
      "connection_failure": "Unable to connect to Peblar EV Charger. Check the Advance Settings page of your Peblar EV Charge to make sure the Local REST API is enabled."
    },
    "step": {
      "user": {
        "data": {
          "friendly_name": "A name for this specific Peblar EV Charger",
          "host": "Host (IP or DNS) for the Peblar EV Charger (e.g. http://10.11.12.13)",
          "api_token": "The API token from the settings page of your Peblar EV Charger",
          "scan_interval": "Scan interval (in seconds) for reading the charger status when there is no charge in progress",
          "scan_interval_while_charging": "Scan interval (in seconds) for reading the charger status when there is a charge in progress"
        },
        "description": "Commission your Peblar EV Charger first, give it a static IP address or DHCP reservation and enable the Local REST API. Then enter the IP address and API token here.",
        "title": "Add a Peblar EV Charger"
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "basic_schedule": {
        "name": "Basic schedule"
      },
      "cable_locked": {
        "name": "Cable lock"
      },
      "online": {
        "name": "Online"
      },
      "surplus": {
        "name": "Surplus charging"
      },
      "update_available": {
        "name": "Update available"
      },
      "weekly_schedule": {
        "name": "Weekly schedule"
      }
    },
    "sensor": {
      "circuit_current": {
        "name": "Circuit current"
      },
      "cost_day": {
        "name": "Cost day"
      },
      "cost_month": {
        "name": "Cost month"
      },
      "cost_per_kwh": {
        "name": "Cost per kWh"
      },
      "cost_year": {
        "name": "Cost year"
      },
      "current": {
        "name": "Current"
      },
      "dynamic_charger_limit": {
        "name": "Dynamic charger limit"
      },
      "dynamic_circuit_limit": {
        "name": "Dynamic circuit limit"
      },
      "easee_status": {
        "name": "Status",
        "state": {
          "authenticating": "Authenticating",
          "awaiting_authentication": "Waiting for authentication",
          "awaiting_authorization": "Waiting for authorization",
          "awaiting_load_balancing": "Waiting for load balancing",
          "awaiting_scheduled_start": "Waiting for scheduled start",
          "awaiting_smart_start": "Waiting for smart start",
          "awaiting_start": "Awaiting start",
          "charging": "Charging",
          "completed": "Completed",
          "de_authorizing": "Closing authorization",
          "disconnected": "Car disconnected",
          "erratic_ev": "Erratic EV",
          "error": "Error",
          "error_dead_powerboard": "Error Dead powerboard",
          "error_overcurrent": "Error Overcurrent",
          "error_pen_fault": "Error PEN fault",
          "error_temperature_too_high": "Error Temperature too high",
          "offline": "Offline",
          "paused_due_to_equalizer": "Paused due to Equalizer",
          "ready_to_charge": "Ready to charge",
          "searching_for_master": "Searching for master",
          "start_charging": "Start charging",
          "stop_charging": "Stop charging"
        }
      },
      "energy_per_hour": {
        "name": "Energy per hour"
      },
      "equalizer_limit": {
        "name": "Equalizer limit"
      },
      "export_energy": {
        "name": "Export energy"
      },
      "export_power": {
        "name": "Export power"
      },
      "export_reactive_energy": {
        "name": "Export reactive energy"
      },
      "export_reactive_power": {
        "name": "Export reactive power"
      },
      "import_energy": {
        "name": "Import energy"
      },
      "import_power": {
        "name": "Import power"
      },
      "import_reactive_energy": {
        "name": "Import reactive energy"
      },
      "import_reactive_power": {
        "name": "Import reactive power"
      },
      "internal_temperature": {
        "name": "Internal temperature"
      },
      "lifetime_energy": {
        "name": "Lifetime energy"
      },
      "max_charger_limit": {
        "name": "Max charger limit"
      },
      "max_circuit_limit": {
        "name": "Max circuit limit"
      },
      "offline_circuit_limit": {
        "name": "Offline circuit limit"
      },
      "output_limit": {
        "name": "Output limit"
      },
      "power": {
        "name": "Power"
      },
      "session_energy": {
        "name": "Session Energy"
      },
      "voltage": {
        "name": "Voltage"
      }
    },
    "switch": {
      "cable_locked_permanently": {
        "name": "Cable locked permanently"
      },
      "idle_current": {
        "name": "Idle current"
      },
      "is_enabled": {
        "name": "Charger enabled"
      },
      "smart_button": {
        "name": "Touch button enabled"
      },
      "smart_charging": {
        "name": "Smart charging"
      }
    }
  },
  "issues": {
    "currentpx_deprecation": {
      "description": "The use of {argument} as phase current is deprecated and will not be accepted in future verions. Please convert your automations and scripts to use {recommendation} instead.",
      "title": "Use of {argument} in service call"
    },
    "deprecated_service": {
      "description": "The use of the service **{deprecation}** is deprecated and the service will be removed in the future.\n\nPlease convert your automations and scripts to use **{recommend}** as soon as possible",
      "title": "Use of deprecated service: {deprecation}"
    },
    "numeric_deprecation": {
      "description": "The use of numeric value for {argument} is deprecated and will not be accepted in future versions. Please convert your automations and scripts to use strings {recommendation} instead.",
      "title": "Use of numeric value for {argument} in service call"
    }
  },
  "options": {
    "error": {
      "no_sites": "No monitored sites selected"
    },
    "step": {
      "init": {
        "data": {
          "custom_units": "Custom units",
          "measured_consumption_days": "Consumption monitoring days",
          "monitored_conditions": "Charger sensors monitored",
          "monitored_eq_conditions": "Equalizer sensors monitored",
          "monitored_sites": "Sites monitored"
        },
        "description": "Select options",
        "title": "Easee EV Charger"
      }
    }
  },
  "selector": {
    "access_level": {
      "options": {
        "open_for_all": "Open for all",
        "require_easee_account": "Require Easee account",
        "whitelist": "Whitelist"
      }
    },
    "action_command": {
      "options": {
        "delete_basic_charge_plan": "Delete basic charge plan",
        "delete_weekly_charge_plan": "Delete weekly charge plan",
        "disable_basic_charge_plan": "Disable basic charge plan",
        "disable_weekly_charge_plan": "Disable weekly charge plan",
        "enable_basic_charge_plan": "Enable basic charge plan",
        "enable_weekly_charge_plan": "Enable weekly charge plan",
        "override_schedule": "Override schedule",
        "pause": "Pause",
        "reboot": "Reboot charger",
        "resume": "Resume",
        "start": "Start",
        "stop": "Stop",
        "toggle": "Toggle",
        "update_firmware": "Update firmware"
      }
    },
    "phase_mode": {
      "options": {
        "1_phase": "1 phase mode",
        "3_phase": "3 phase mode",
        "auto_phase": "Auto phase mode"
      }
    },
    "weekday": {
      "options": {
        "friday": "Friday",
        "monday": "Monday",
        "saturday": "Saturday",
        "sunday": "Sunday",
        "thursday": "Thursday",
        "tuesday": "Tuesday",
        "wednesday": "Wednesday"
      }
    }
  },
  "services": {
    "action_command": {
      "description": "Send command to charger",
      "fields": {
        "action_command": {
          "description": "Select the command to execute",
          "name": "Command"
        },
        "device_id": {
          "description": "Select device to be controlled",
          "name": "Target device"
        }
      },
      "name": "Action command"
    },
    "set_basic_charge_plan": {
      "description": "Set basic charge plan",
      "fields": {
        "current": {
          "description": "Maximum current during plan",
          "name": "Maximum current"
        },
        "device_id": {
          "description": "Select device to be controlled",
          "name": "Target device"
        },
        "repeat": {
          "description": "Repeat plan",
          "name": "Repeat plan"
        },
        "start_datetime": {
          "description": "Start time for plan",
          "name": "Start datetime"
        },
        "stop_datetime": {
          "description": "Stop time for plan",
          "name": "Stop datetime"
        }
      },
      "name": "Set basic charge plan"
    },
    "set_charger_access": {
      "description": "Select who should be able to charge",
      "fields": {
        "access_level": {
          "description": "Set access to charging",
          "name": "Access"
        },
        "device_id": {
          "description": "Select device to be controlled",
          "name": "Target device"
        }
      },
      "name": "Set access to charger"
    },
    "set_charger_dynamic_limit": {
      "description": "Set charger dynamic limit",
      "fields": {
        "current": {
          "description": "Max charging current",
          "name": "Current"
        },
        "device_id": {
          "description": "Select one of the chargers in the circuit that should be controlled.",
          "name": "Target device"
        }
      },
      "name": "Set charger dynamic limit"
    },
    "set_charger_max_limit": {
      "description": "Set charger max limit. Caution! Should not be used by automation (may wear out flash memory if set too frequently).",
      "fields": {
        "current": {
          "description": "Max charging current",
          "name": "Current"
        },
        "device_id": {
          "description": "Select one of the chargers in the circuit that should be controlled.",
          "name": "Target device"
        }
      },
      "name": "Set charger max limit"
    },
    "set_charger_phase_mode": {
      "description": "Set charger phase mode",
      "fields": {
        "device_id": {
          "description": "Select device to be controlled",
          "name": "Target device"
        },
        "phase_mode": {
          "description": "Charger phase mode",
          "name": "Phase mode"
        }
      },
      "name": "Set charger phase mode"
    },
    "set_charging_cost": {
      "description": "Set charging cost per kWh for charger site",
      "fields": {
        "cost_per_kwh": {
          "description": "Cost per kWh",
          "name": "Cost per kWh"
        },
        "currency_id": {
          "description": "Currency code",
          "name": "Currency"
        },
        "device_id": {
          "description": "Select one of the chargers in the circuit that should be controlled.",
          "name": "Target device"
        },
        "vat": {
          "description": "Value added tax",
          "name": "VAT"
        }
      },
      "name": "Set charging cost"
    },
    "set_circuit_dynamic_limit": {
      "description": "Set circuit dynamic limit (shared between chargers on that circuit). This service can be used in automations.",
      "fields": {
        "current_p1": {
          "description": "Max charging current",
          "name": "Current phase 1"
        },
        "current_p2": {
          "description": "Max charging current. If disabled, the value of Current phase 1 will be used.",
          "name": "Current phase 2"
        },
        "current_p3": {
          "description": "Max charging current. If disabled, the value of Current phase 1 will be used.",
          "name": "Current phase 3"
        },
        "device_id": {
          "description": "Select one of the chargers in the circuit that should be controlled.",
          "name": "Target device"
        },
        "time_to_live": {
          "description": "Set time in minutes for the command to live. 0 = indefinitely.",
          "name": "Time to live"
        }
      },
      "name": "Set circuit dynamic limit"
    },
    "set_circuit_max_limit": {
      "description": "Set circuit max limit. Caution! Should not be used by automation (may wear out flash memory if set too frequently).",
      "fields": {
        "current_p1": {
          "description": "Max charging current",
          "name": "Current phase 1"
        },
        "current_p2": {
          "description": "Max charging current. If disabled, the value of Current phase 1 will be used.",
          "name": "Current phase 2"
        },
        "current_p3": {
          "description": "Max charging current. If disabled, the value of Current phase 1 will be used.",
          "name": "Current phase 3"
        },
        "device_id": {
          "description": "Select one of the chargers in the circuit that should be controlled.",
          "name": "Target device"
        }
      },
      "name": "Set circuit max limit"
    },
    "set_circuit_offline_limit": {
      "description": "Set circuit offline limit used if charger is offline (fallback). Caution! Should not be used by automation (may wear out flash memory if set too frequently).",
      "fields": {
        "current_p1": {
          "description": "Max charging current",
          "name": "Current phase 1"
        },
        "current_p2": {
          "description": "Max charging current. If disabled, the value of Current phase 1 will be used.",
          "name": "Current phase 2"
        },
        "current_p3": {
          "description": "Max charging current. If disabled, the value of Current phase 1 will be used.",
          "name": "Current phase 3"
        },
        "device_id": {
          "description": "Select one of the chargers in the circuit that should be controlled.",
          "name": "Target device"
        }
      },
      "name": "Set circuit offline limit"
    },
    "set_load_balancing": {
      "description": "Set equalizer load balancing",
      "fields": {
        "current": {
          "description": "Max additional current from grid",
          "name": "Current"
        },
        "device_id": {
          "description": "Select device to be controlled",
          "name": "Target device"
        },
        "enable": {
          "description": "Enable load balancing",
          "name": "Enable"
        }
      },
      "name": "Set load balancing"
    },
    "set_weekly_charge_plan": {
      "description": "Set weekly charge plan",
      "fields": {
        "current": {
          "description": "Maximum current during plan",
          "name": "Maximum current"
        },
        "day": {
          "description": "Weekday for this schedule",
          "name": "Weekday"
        },
        "device_id": {
          "description": "Select device to be controlled",
          "name": "Target device"
        },
        "start_time": {
          "description": "Start time for plan",
          "name": "Start time"
        },
        "stop_time": {
          "description": "Stop time for plan",
          "name": "Stop time"
        }
      },
      "name": "Set weekly charge plan"
    },
    "smart_charging": {
      "description": "Enable/disable smart charging",
      "fields": {
        "device_id": {
          "description": "Select device to be controlled",
          "name": "Target device"
        },
        "enable": {
          "description": "Enable smart charging",
          "name": "Enable"
        }
      },
      "name": "Smart charging"
    }
  },
  "title": "Peblar EV Charger"
}
